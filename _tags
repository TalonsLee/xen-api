# OASIS_START
# DO NOT EDIT (digest: 61918f47700922cbe38cd160c2a308b8)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library xapi-database
"ocaml/database/xapi-database.cmxs": use_xapi-database
# Executable block_device_io
<ocaml/database/block_device_io.{native,byte}>: package(gzip)
<ocaml/database/block_device_io.{native,byte}>: package(http-svr)
<ocaml/database/block_device_io.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/database/block_device_io.{native,byte}>: package(ppx_sexp_conv)
<ocaml/database/block_device_io.{native,byte}>: package(rpclib)
<ocaml/database/block_device_io.{native,byte}>: package(sexpr)
<ocaml/database/block_device_io.{native,byte}>: package(threads)
<ocaml/database/block_device_io.{native,byte}>: package(uuid)
<ocaml/database/block_device_io.{native,byte}>: package(xcp)
<ocaml/database/block_device_io.{native,byte}>: use_xapi-database
<ocaml/database/*.ml{,i,y}>: package(gzip)
<ocaml/database/*.ml{,i,y}>: package(http-svr)
<ocaml/database/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/database/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/database/*.ml{,i,y}>: package(rpclib)
<ocaml/database/*.ml{,i,y}>: package(sexpr)
<ocaml/database/*.ml{,i,y}>: package(threads)
<ocaml/database/*.ml{,i,y}>: package(uuid)
<ocaml/database/*.ml{,i,y}>: package(xcp)
<ocaml/database/*.ml{,i,y}>: use_xapi-database
# Library xapi-consts
"ocaml/xapi-consts/xapi-consts.cmxs": use_xapi-consts
# Library xapi-datamodel
"ocaml/idl/xapi-datamodel.cmxs": use_xapi-datamodel
<ocaml/idl/xapi-datamodel.{cma,cmxa}>: oasis_library_xapi_datamodel_byte
<ocaml/idl/*.ml{,i,y}>: oasis_library_xapi_datamodel_byte
<ocaml/idl/xapi-datamodel.{cma,cmxa}>: oasis_library_xapi_datamodel_native
<ocaml/idl/*.ml{,i,y}>: oasis_library_xapi_datamodel_native
# Executable gen_api_main
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: oasis_executable_gen_api_main_byte
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: oasis_executable_gen_api_main_byte
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: oasis_executable_gen_api_main_native
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: oasis_executable_gen_api_main_native
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(gzip)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(http-svr)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(ppx_sexp_conv)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(rpclib)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(sexpr)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(stdext)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(threads)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(uuid)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(xcp)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: package(xml-light2)
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: use_xapi-consts
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: use_xapi-database
<ocaml/idl/ocaml_backend/gen_api_main.{native,byte}>: use_xapi-datamodel
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(gzip)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(http-svr)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(rpclib)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(sexpr)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(stdext)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(threads)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(uuid)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(xcp)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: package(xml-light2)
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: use_xapi-consts
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: use_xapi-database
<ocaml/idl/ocaml_backend/*.ml{,i,y}>: use_xapi-datamodel
# Executable gen_json
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(gzip)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(http-svr)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(ppx_sexp_conv)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(rpclib)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(sexpr)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(stdext)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(threads)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(uuid)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(xcp)
<ocaml/idl/json_backend/gen_json.{native,byte}>: package(xml-light2)
<ocaml/idl/json_backend/gen_json.{native,byte}>: use_xapi-consts
<ocaml/idl/json_backend/gen_json.{native,byte}>: use_xapi-database
<ocaml/idl/json_backend/gen_json.{native,byte}>: use_xapi-datamodel
<ocaml/idl/json_backend/*.ml{,i,y}>: package(gzip)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(http-svr)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(rpclib)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(sexpr)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(stdext)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(threads)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(uuid)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(xcp)
<ocaml/idl/json_backend/*.ml{,i,y}>: package(xml-light2)
<ocaml/idl/json_backend/*.ml{,i,y}>: use_xapi-consts
<ocaml/idl/json_backend/*.ml{,i,y}>: use_xapi-database
<ocaml/idl/json_backend/*.ml{,i,y}>: use_xapi-datamodel
# Library xapi-types
"ocaml/xapi-types/xapi-types.cmxs": use_xapi-types
<ocaml/xapi-types/*.ml{,i,y}>: package(http-svr)
<ocaml/xapi-types/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/xapi-types/*.ml{,i,y}>: package(rpclib)
<ocaml/xapi-types/*.ml{,i,y}>: package(stdext)
<ocaml/xapi-types/*.ml{,i,y}>: package(threads)
<ocaml/xapi-types/*.ml{,i,y}>: package(uuid)
<ocaml/xapi-types/*.ml{,i,y}>: use_xapi-consts
# Library xapi-client
"ocaml/xapi-client/xapi-client.cmxs": use_xapi-client
<ocaml/xapi-client/*.ml{,i,y}>: package(http-svr)
<ocaml/xapi-client/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/xapi-client/*.ml{,i,y}>: package(rpclib)
<ocaml/xapi-client/*.ml{,i,y}>: package(stdext)
<ocaml/xapi-client/*.ml{,i,y}>: package(threads)
<ocaml/xapi-client/*.ml{,i,y}>: package(uuid)
<ocaml/xapi-client/*.ml{,i,y}>: use_xapi-consts
<ocaml/xapi-client/*.ml{,i,y}>: use_xapi-types
# Library xapi-version
"ocaml/util/xapi-version.cmxs": use_xapi-version
<ocaml/util/*.ml{,i,y}>: package(threads)
<ocaml/util/*.ml{,i,y}>: package(xcp)
<ocaml/util/*.ml{,i,y}>: package(xcp-inventory)
# Library pam
"ocaml/auth/pam.cmxs": use_pam
<ocaml/auth/*.ml{,i,y}>: oasis_library_pam_ccopt
"ocaml/auth/xa_auth.c": oasis_library_pam_ccopt
"ocaml/auth/xa_auth_stubs.c": oasis_library_pam_ccopt
<ocaml/auth/pam.{cma,cmxa}>: oasis_library_pam_cclib
"ocaml/auth/libpam_stubs.lib": oasis_library_pam_cclib
"ocaml/auth/dllpam_stubs.dll": oasis_library_pam_cclib
"ocaml/auth/libpam_stubs.a": oasis_library_pam_cclib
"ocaml/auth/dllpam_stubs.so": oasis_library_pam_cclib
<ocaml/auth/pam.{cma,cmxa}>: use_libpam_stubs
# Library rfb
"ocaml/rfb/rfb.cmxs": use_rfb
<ocaml/rfb/*.ml{,i,y}>: package(stdext)
<ocaml/rfb/*.ml{,i,y}>: package(threads)
# Library xapi-cli-protocol
"ocaml/xapi-cli-protocol/xapi-cli-protocol.cmxs": use_xapi-cli-protocol
<ocaml/xapi-cli-protocol/*.ml{,i,y}>: package(stdext)
<ocaml/xapi-cli-protocol/*.ml{,i,y}>: package(threads)
# Executable xapi
<ocaml/xapi/xapi_main.{native,byte}>: oasis_executable_xapi_byte
<ocaml/xapi/*.ml{,i,y}>: oasis_executable_xapi_byte
<ocaml/xapi/xapi_main.{native,byte}>: oasis_executable_xapi_native
<ocaml/xapi/*.ml{,i,y}>: oasis_executable_xapi_native
<ocaml/xapi/xapi_main.{native,byte}>: package(ezxenstore)
<ocaml/xapi/xapi_main.{native,byte}>: package(gzip)
<ocaml/xapi/xapi_main.{native,byte}>: package(http-svr)
<ocaml/xapi/xapi_main.{native,byte}>: package(oPasswd)
<ocaml/xapi/xapi_main.{native,byte}>: package(oclock)
<ocaml/xapi/xapi_main.{native,byte}>: package(pci)
<ocaml/xapi/xapi_main.{native,byte}>: package(pciutil)
<ocaml/xapi/xapi_main.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/xapi/xapi_main.{native,byte}>: package(ppx_sexp_conv)
<ocaml/xapi/xapi_main.{native,byte}>: package(rpclib)
<ocaml/xapi/xapi_main.{native,byte}>: package(rrdd-plugin)
<ocaml/xapi/xapi_main.{native,byte}>: package(sexpr)
<ocaml/xapi/xapi_main.{native,byte}>: package(sha)
<ocaml/xapi/xapi_main.{native,byte}>: package(stdext)
<ocaml/xapi/xapi_main.{native,byte}>: package(tapctl)
<ocaml/xapi/xapi_main.{native,byte}>: package(tar)
<ocaml/xapi/xapi_main.{native,byte}>: package(tar.unix)
<ocaml/xapi/xapi_main.{native,byte}>: package(threads)
<ocaml/xapi/xapi_main.{native,byte}>: package(uuid)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp-inventory)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.gpumon)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.memory)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.network)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.rrd)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.storage)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.updates)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.v6)
<ocaml/xapi/xapi_main.{native,byte}>: package(xcp.xen)
<ocaml/xapi/xapi_main.{native,byte}>: package(xenctrl)
<ocaml/xapi/xapi_main.{native,byte}>: package(xml-light2)
<ocaml/xapi/xapi_main.{native,byte}>: use_pam
<ocaml/xapi/xapi_main.{native,byte}>: use_rfb
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-cli-protocol
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-client
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-consts
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-database
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-datamodel
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-types
<ocaml/xapi/xapi_main.{native,byte}>: use_xapi-version
<ocaml/xapi/*.ml{,i,y}>: package(xcp.updates)
# Executable xe
<ocaml/xe-cli/newcli.{native,byte}>: package(stdext)
<ocaml/xe-cli/newcli.{native,byte}>: package(stunnel)
<ocaml/xe-cli/newcli.{native,byte}>: package(threads)
<ocaml/xe-cli/newcli.{native,byte}>: use_xapi-cli-protocol
<ocaml/xe-cli/*.ml{,i,y}>: package(stdext)
<ocaml/xe-cli/*.ml{,i,y}>: package(stunnel)
<ocaml/xe-cli/*.ml{,i,y}>: package(threads)
<ocaml/xe-cli/*.ml{,i,y}>: use_xapi-cli-protocol
# Executable perftest
<ocaml/perftest/perftest.{native,byte}>: package(http-svr)
<ocaml/perftest/perftest.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/perftest/perftest.{native,byte}>: package(rpclib)
<ocaml/perftest/perftest.{native,byte}>: package(stdext)
<ocaml/perftest/perftest.{native,byte}>: package(stunnel)
<ocaml/perftest/perftest.{native,byte}>: package(threads)
<ocaml/perftest/perftest.{native,byte}>: package(uuid)
<ocaml/perftest/perftest.{native,byte}>: package(xcp)
<ocaml/perftest/perftest.{native,byte}>: package(xml-light2)
<ocaml/perftest/perftest.{native,byte}>: use_xapi-client
<ocaml/perftest/perftest.{native,byte}>: use_xapi-consts
<ocaml/perftest/perftest.{native,byte}>: use_xapi-types
<ocaml/perftest/*.ml{,i,y}>: package(http-svr)
<ocaml/perftest/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/perftest/*.ml{,i,y}>: package(rpclib)
<ocaml/perftest/*.ml{,i,y}>: package(stdext)
<ocaml/perftest/*.ml{,i,y}>: package(stunnel)
<ocaml/perftest/*.ml{,i,y}>: package(threads)
<ocaml/perftest/*.ml{,i,y}>: package(uuid)
<ocaml/perftest/*.ml{,i,y}>: package(xcp)
<ocaml/perftest/*.ml{,i,y}>: package(xml-light2)
<ocaml/perftest/*.ml{,i,y}>: use_xapi-client
<ocaml/perftest/*.ml{,i,y}>: use_xapi-consts
<ocaml/perftest/*.ml{,i,y}>: use_xapi-types
# Executable mpathalert
<ocaml/mpathalert/mpathalert.{native,byte}>: package(http-svr)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(rpclib)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(stdext)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(stunnel)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(threads)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(uuid)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(xcp)
<ocaml/mpathalert/mpathalert.{native,byte}>: package(xml-light2)
<ocaml/mpathalert/mpathalert.{native,byte}>: use_xapi-client
<ocaml/mpathalert/mpathalert.{native,byte}>: use_xapi-consts
<ocaml/mpathalert/mpathalert.{native,byte}>: use_xapi-types
<ocaml/mpathalert/*.ml{,i,y}>: package(http-svr)
<ocaml/mpathalert/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/mpathalert/*.ml{,i,y}>: package(rpclib)
<ocaml/mpathalert/*.ml{,i,y}>: package(stdext)
<ocaml/mpathalert/*.ml{,i,y}>: package(stunnel)
<ocaml/mpathalert/*.ml{,i,y}>: package(threads)
<ocaml/mpathalert/*.ml{,i,y}>: package(uuid)
<ocaml/mpathalert/*.ml{,i,y}>: package(xcp)
<ocaml/mpathalert/*.ml{,i,y}>: package(xml-light2)
<ocaml/mpathalert/*.ml{,i,y}>: use_xapi-client
<ocaml/mpathalert/*.ml{,i,y}>: use_xapi-consts
<ocaml/mpathalert/*.ml{,i,y}>: use_xapi-types
# Executable quicktestbin
<ocaml/xapi/quicktest.{native,byte}>: package(ezxenstore)
<ocaml/xapi/quicktest.{native,byte}>: package(gzip)
<ocaml/xapi/quicktest.{native,byte}>: package(http-svr)
<ocaml/xapi/quicktest.{native,byte}>: package(netdev)
<ocaml/xapi/quicktest.{native,byte}>: package(oPasswd)
<ocaml/xapi/quicktest.{native,byte}>: package(oclock)
<ocaml/xapi/quicktest.{native,byte}>: package(pci)
<ocaml/xapi/quicktest.{native,byte}>: package(pciutil)
<ocaml/xapi/quicktest.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/xapi/quicktest.{native,byte}>: package(ppx_sexp_conv)
<ocaml/xapi/quicktest.{native,byte}>: package(rpclib)
<ocaml/xapi/quicktest.{native,byte}>: package(rrdd-plugin)
<ocaml/xapi/quicktest.{native,byte}>: package(sexpr)
<ocaml/xapi/quicktest.{native,byte}>: package(sha)
<ocaml/xapi/quicktest.{native,byte}>: package(stdext)
<ocaml/xapi/quicktest.{native,byte}>: package(tapctl)
<ocaml/xapi/quicktest.{native,byte}>: package(tar)
<ocaml/xapi/quicktest.{native,byte}>: package(tar.unix)
<ocaml/xapi/quicktest.{native,byte}>: package(threads)
<ocaml/xapi/quicktest.{native,byte}>: package(uuid)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp-inventory)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp.memory)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp.network)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp.rrd)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp.storage)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp.v6)
<ocaml/xapi/quicktest.{native,byte}>: package(xcp.xen)
<ocaml/xapi/quicktest.{native,byte}>: package(xenctrl)
<ocaml/xapi/quicktest.{native,byte}>: package(xml-light2)
<ocaml/xapi/quicktest.{native,byte}>: use_pam
<ocaml/xapi/quicktest.{native,byte}>: use_rfb
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-cli-protocol
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-client
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-consts
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-database
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-datamodel
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-types
<ocaml/xapi/quicktest.{native,byte}>: use_xapi-version
<ocaml/xapi/*.ml{,i,y}>: package(netdev)
# Executable xsh
<ocaml/xsh/xsh.{native,byte}>: package(stdext)
<ocaml/xsh/xsh.{native,byte}>: package(stunnel)
<ocaml/xsh/xsh.{native,byte}>: package(threads)
<ocaml/xsh/*.ml{,i,y}>: package(stdext)
<ocaml/xsh/*.ml{,i,y}>: package(stunnel)
<ocaml/xsh/*.ml{,i,y}>: package(threads)
# Executable cdrommon
<ocaml/cdrommon/cdrommon.{native,byte}>: package(cdrom)
<ocaml/cdrommon/cdrommon.{native,byte}>: package(threads)
<ocaml/cdrommon/cdrommon.{native,byte}>: package(unix)
<ocaml/cdrommon/cdrommon.{native,byte}>: package(xcp-inventory)
<ocaml/cdrommon/*.ml{,i,y}>: package(cdrom)
<ocaml/cdrommon/*.ml{,i,y}>: package(threads)
<ocaml/cdrommon/*.ml{,i,y}>: package(unix)
<ocaml/cdrommon/*.ml{,i,y}>: package(xcp-inventory)
# Executable daily-license-check
<ocaml/license/daily_license_check_main.{native,byte}>: package(http-svr)
<ocaml/license/daily_license_check_main.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/license/daily_license_check_main.{native,byte}>: package(rpclib)
<ocaml/license/daily_license_check_main.{native,byte}>: package(stdext)
<ocaml/license/daily_license_check_main.{native,byte}>: package(stunnel)
<ocaml/license/daily_license_check_main.{native,byte}>: package(systemd)
<ocaml/license/daily_license_check_main.{native,byte}>: package(threads)
<ocaml/license/daily_license_check_main.{native,byte}>: package(uuid)
<ocaml/license/daily_license_check_main.{native,byte}>: package(xcp)
<ocaml/license/daily_license_check_main.{native,byte}>: package(xml-light2)
<ocaml/license/daily_license_check_main.{native,byte}>: use_xapi-client
<ocaml/license/daily_license_check_main.{native,byte}>: use_xapi-consts
<ocaml/license/daily_license_check_main.{native,byte}>: use_xapi-types
<ocaml/license/*.ml{,i,y}>: package(http-svr)
<ocaml/license/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/license/*.ml{,i,y}>: package(rpclib)
<ocaml/license/*.ml{,i,y}>: package(stdext)
<ocaml/license/*.ml{,i,y}>: package(stunnel)
<ocaml/license/*.ml{,i,y}>: package(systemd)
<ocaml/license/*.ml{,i,y}>: package(threads)
<ocaml/license/*.ml{,i,y}>: package(uuid)
<ocaml/license/*.ml{,i,y}>: package(xcp)
<ocaml/license/*.ml{,i,y}>: package(xml-light2)
<ocaml/license/*.ml{,i,y}>: use_xapi-client
<ocaml/license/*.ml{,i,y}>: use_xapi-consts
<ocaml/license/*.ml{,i,y}>: use_xapi-types
# Executable xapi-db-process
<ocaml/db_process/xapi_db_process.{native,byte}>: package(gzip)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(http-svr)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(ppx_sexp_conv)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(rpclib)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(sexpr)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(stdext)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(stunnel)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(systemd)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(threads)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(uuid)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(xcp)
<ocaml/db_process/xapi_db_process.{native,byte}>: package(xml-light2)
<ocaml/db_process/xapi_db_process.{native,byte}>: use_xapi-client
<ocaml/db_process/xapi_db_process.{native,byte}>: use_xapi-consts
<ocaml/db_process/xapi_db_process.{native,byte}>: use_xapi-database
<ocaml/db_process/xapi_db_process.{native,byte}>: use_xapi-types
<ocaml/db_process/*.ml{,i,y}>: package(gzip)
<ocaml/db_process/*.ml{,i,y}>: package(http-svr)
<ocaml/db_process/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/db_process/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/db_process/*.ml{,i,y}>: package(rpclib)
<ocaml/db_process/*.ml{,i,y}>: package(sexpr)
<ocaml/db_process/*.ml{,i,y}>: package(stdext)
<ocaml/db_process/*.ml{,i,y}>: package(stunnel)
<ocaml/db_process/*.ml{,i,y}>: package(systemd)
<ocaml/db_process/*.ml{,i,y}>: package(threads)
<ocaml/db_process/*.ml{,i,y}>: package(uuid)
<ocaml/db_process/*.ml{,i,y}>: package(xcp)
<ocaml/db_process/*.ml{,i,y}>: package(xml-light2)
<ocaml/db_process/*.ml{,i,y}>: use_xapi-client
<ocaml/db_process/*.ml{,i,y}>: use_xapi-consts
<ocaml/db_process/*.ml{,i,y}>: use_xapi-database
<ocaml/db_process/*.ml{,i,y}>: use_xapi-types
# Executable vncproxy
<ocaml/vncproxy/vncproxy.{native,byte}>: package(http-svr)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(rpclib)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(stdext)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(stunnel)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(threads)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(uuid)
<ocaml/vncproxy/vncproxy.{native,byte}>: package(xml-light2)
<ocaml/vncproxy/vncproxy.{native,byte}>: use_xapi-client
<ocaml/vncproxy/vncproxy.{native,byte}>: use_xapi-consts
<ocaml/vncproxy/vncproxy.{native,byte}>: use_xapi-types
<ocaml/vncproxy/*.ml{,i,y}>: package(http-svr)
<ocaml/vncproxy/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/vncproxy/*.ml{,i,y}>: package(rpclib)
<ocaml/vncproxy/*.ml{,i,y}>: package(stdext)
<ocaml/vncproxy/*.ml{,i,y}>: package(stunnel)
<ocaml/vncproxy/*.ml{,i,y}>: package(threads)
<ocaml/vncproxy/*.ml{,i,y}>: package(uuid)
<ocaml/vncproxy/*.ml{,i,y}>: package(xml-light2)
<ocaml/vncproxy/*.ml{,i,y}>: use_xapi-client
<ocaml/vncproxy/*.ml{,i,y}>: use_xapi-consts
<ocaml/vncproxy/*.ml{,i,y}>: use_xapi-types
# Executable event_listen
<ocaml/events/event_listen.{native,byte}>: package(http-svr)
<ocaml/events/event_listen.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/events/event_listen.{native,byte}>: package(rpclib)
<ocaml/events/event_listen.{native,byte}>: package(stdext)
<ocaml/events/event_listen.{native,byte}>: package(stunnel)
<ocaml/events/event_listen.{native,byte}>: package(threads)
<ocaml/events/event_listen.{native,byte}>: package(uuid)
<ocaml/events/event_listen.{native,byte}>: package(xml-light2)
<ocaml/events/event_listen.{native,byte}>: use_xapi-client
<ocaml/events/event_listen.{native,byte}>: use_xapi-consts
<ocaml/events/event_listen.{native,byte}>: use_xapi-types
<ocaml/events/*.ml{,i,y}>: package(http-svr)
<ocaml/events/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/events/*.ml{,i,y}>: package(rpclib)
<ocaml/events/*.ml{,i,y}>: package(stdext)
<ocaml/events/*.ml{,i,y}>: package(stunnel)
<ocaml/events/*.ml{,i,y}>: package(threads)
<ocaml/events/*.ml{,i,y}>: package(uuid)
<ocaml/events/*.ml{,i,y}>: package(xml-light2)
<ocaml/events/*.ml{,i,y}>: use_xapi-client
<ocaml/events/*.ml{,i,y}>: use_xapi-consts
<ocaml/events/*.ml{,i,y}>: use_xapi-types
# Executable graph
<ocaml/graph/graph.{native,byte}>: package(gzip)
<ocaml/graph/graph.{native,byte}>: package(http-svr)
<ocaml/graph/graph.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/graph/graph.{native,byte}>: package(ppx_sexp_conv)
<ocaml/graph/graph.{native,byte}>: package(rpclib)
<ocaml/graph/graph.{native,byte}>: package(sexpr)
<ocaml/graph/graph.{native,byte}>: package(stdext)
<ocaml/graph/graph.{native,byte}>: package(stunnel)
<ocaml/graph/graph.{native,byte}>: package(threads)
<ocaml/graph/graph.{native,byte}>: package(uuid)
<ocaml/graph/graph.{native,byte}>: package(xcp)
<ocaml/graph/graph.{native,byte}>: package(xml-light2)
<ocaml/graph/graph.{native,byte}>: use_xapi-client
<ocaml/graph/graph.{native,byte}>: use_xapi-consts
<ocaml/graph/graph.{native,byte}>: use_xapi-database
<ocaml/graph/graph.{native,byte}>: use_xapi-datamodel
<ocaml/graph/graph.{native,byte}>: use_xapi-types
<ocaml/graph/*.ml{,i,y}>: package(gzip)
<ocaml/graph/*.ml{,i,y}>: package(http-svr)
<ocaml/graph/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/graph/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/graph/*.ml{,i,y}>: package(rpclib)
<ocaml/graph/*.ml{,i,y}>: package(sexpr)
<ocaml/graph/*.ml{,i,y}>: package(stdext)
<ocaml/graph/*.ml{,i,y}>: package(stunnel)
<ocaml/graph/*.ml{,i,y}>: package(threads)
<ocaml/graph/*.ml{,i,y}>: package(uuid)
<ocaml/graph/*.ml{,i,y}>: package(xcp)
<ocaml/graph/*.ml{,i,y}>: package(xml-light2)
<ocaml/graph/*.ml{,i,y}>: use_xapi-client
<ocaml/graph/*.ml{,i,y}>: use_xapi-consts
<ocaml/graph/*.ml{,i,y}>: use_xapi-database
<ocaml/graph/*.ml{,i,y}>: use_xapi-datamodel
<ocaml/graph/*.ml{,i,y}>: use_xapi-types
# Executable genptoken
<ocaml/ptoken/genptoken.{native,byte}>: package(uuid)
<ocaml/ptoken/*.ml{,i,y}>: package(uuid)
# Executable jsapi
<ocaml/doc/jsapi.{native,byte}>: package(gzip)
<ocaml/doc/jsapi.{native,byte}>: package(http-svr)
<ocaml/doc/jsapi.{native,byte}>: package(mustache)
<ocaml/doc/jsapi.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/doc/jsapi.{native,byte}>: package(ppx_sexp_conv)
<ocaml/doc/jsapi.{native,byte}>: package(rpclib)
<ocaml/doc/jsapi.{native,byte}>: package(sexpr)
<ocaml/doc/jsapi.{native,byte}>: package(stdext)
<ocaml/doc/jsapi.{native,byte}>: package(threads)
<ocaml/doc/jsapi.{native,byte}>: package(uuid)
<ocaml/doc/jsapi.{native,byte}>: package(xcp)
<ocaml/doc/jsapi.{native,byte}>: package(xml-light2)
<ocaml/doc/jsapi.{native,byte}>: use_xapi-consts
<ocaml/doc/jsapi.{native,byte}>: use_xapi-database
<ocaml/doc/jsapi.{native,byte}>: use_xapi-datamodel
<ocaml/doc/*.ml{,i,y}>: package(gzip)
<ocaml/doc/*.ml{,i,y}>: package(http-svr)
<ocaml/doc/*.ml{,i,y}>: package(mustache)
<ocaml/doc/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/doc/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/doc/*.ml{,i,y}>: package(rpclib)
<ocaml/doc/*.ml{,i,y}>: package(sexpr)
<ocaml/doc/*.ml{,i,y}>: package(stdext)
<ocaml/doc/*.ml{,i,y}>: package(threads)
<ocaml/doc/*.ml{,i,y}>: package(uuid)
<ocaml/doc/*.ml{,i,y}>: package(xcp)
<ocaml/doc/*.ml{,i,y}>: package(xml-light2)
<ocaml/doc/*.ml{,i,y}>: use_xapi-consts
<ocaml/doc/*.ml{,i,y}>: use_xapi-database
<ocaml/doc/*.ml{,i,y}>: use_xapi-datamodel
# Executable datamodel_main
<ocaml/idl/datamodel_main.{native,byte}>: package(gzip)
<ocaml/idl/datamodel_main.{native,byte}>: package(http-svr)
<ocaml/idl/datamodel_main.{native,byte}>: package(mustache)
<ocaml/idl/datamodel_main.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/idl/datamodel_main.{native,byte}>: package(ppx_sexp_conv)
<ocaml/idl/datamodel_main.{native,byte}>: package(rpclib)
<ocaml/idl/datamodel_main.{native,byte}>: package(sexpr)
<ocaml/idl/datamodel_main.{native,byte}>: package(stdext)
<ocaml/idl/datamodel_main.{native,byte}>: package(threads)
<ocaml/idl/datamodel_main.{native,byte}>: package(uuid)
<ocaml/idl/datamodel_main.{native,byte}>: package(xcp)
<ocaml/idl/datamodel_main.{native,byte}>: package(xml-light2)
<ocaml/idl/datamodel_main.{native,byte}>: use_xapi-consts
<ocaml/idl/datamodel_main.{native,byte}>: use_xapi-database
<ocaml/idl/datamodel_main.{native,byte}>: use_xapi-datamodel
<ocaml/idl/*.ml{,i,y}>: package(gzip)
<ocaml/idl/*.ml{,i,y}>: package(http-svr)
<ocaml/idl/*.ml{,i,y}>: package(mustache)
<ocaml/idl/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/idl/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/idl/*.ml{,i,y}>: package(rpclib)
<ocaml/idl/*.ml{,i,y}>: package(sexpr)
<ocaml/idl/*.ml{,i,y}>: package(stdext)
<ocaml/idl/*.ml{,i,y}>: package(threads)
<ocaml/idl/*.ml{,i,y}>: package(uuid)
<ocaml/idl/*.ml{,i,y}>: package(xcp)
<ocaml/idl/*.ml{,i,y}>: package(xml-light2)
<ocaml/idl/*.ml{,i,y}>: use_xapi-consts
<ocaml/idl/*.ml{,i,y}>: use_xapi-database
<ocaml/idl/*.ml{,i,y}>: use_xapi-datamodel
# Executable suite
<ocaml/xapi/suite.{native,byte}>: package(ezxenstore)
<ocaml/xapi/suite.{native,byte}>: package(gzip)
<ocaml/xapi/suite.{native,byte}>: package(http-svr)
<ocaml/xapi/suite.{native,byte}>: package(oPasswd)
<ocaml/xapi/suite.{native,byte}>: package(oUnit)
<ocaml/xapi/suite.{native,byte}>: package(oclock)
<ocaml/xapi/suite.{native,byte}>: package(pci)
<ocaml/xapi/suite.{native,byte}>: package(pciutil)
<ocaml/xapi/suite.{native,byte}>: package(ppx_deriving_rpc)
<ocaml/xapi/suite.{native,byte}>: package(ppx_sexp_conv)
<ocaml/xapi/suite.{native,byte}>: package(rpclib)
<ocaml/xapi/suite.{native,byte}>: package(rrdd-plugin)
<ocaml/xapi/suite.{native,byte}>: package(sexpr)
<ocaml/xapi/suite.{native,byte}>: package(sha)
<ocaml/xapi/suite.{native,byte}>: package(stdext)
<ocaml/xapi/suite.{native,byte}>: package(tapctl)
<ocaml/xapi/suite.{native,byte}>: package(tar)
<ocaml/xapi/suite.{native,byte}>: package(tar.unix)
<ocaml/xapi/suite.{native,byte}>: package(threads)
<ocaml/xapi/suite.{native,byte}>: package(uuid)
<ocaml/xapi/suite.{native,byte}>: package(xapi-test-utils)
<ocaml/xapi/suite.{native,byte}>: package(xcp)
<ocaml/xapi/suite.{native,byte}>: package(xcp-inventory)
<ocaml/xapi/suite.{native,byte}>: package(xcp.gpumon)
<ocaml/xapi/suite.{native,byte}>: package(xcp.memory)
<ocaml/xapi/suite.{native,byte}>: package(xcp.network)
<ocaml/xapi/suite.{native,byte}>: package(xcp.rrd)
<ocaml/xapi/suite.{native,byte}>: package(xcp.storage)
<ocaml/xapi/suite.{native,byte}>: package(xcp.v6)
<ocaml/xapi/suite.{native,byte}>: package(xcp.xen)
<ocaml/xapi/suite.{native,byte}>: package(xenctrl)
<ocaml/xapi/suite.{native,byte}>: package(xenopsd)
<ocaml/xapi/suite.{native,byte}>: package(xml-light2)
<ocaml/xapi/suite.{native,byte}>: use_pam
<ocaml/xapi/suite.{native,byte}>: use_rfb
<ocaml/xapi/suite.{native,byte}>: use_xapi-cli-protocol
<ocaml/xapi/suite.{native,byte}>: use_xapi-client
<ocaml/xapi/suite.{native,byte}>: use_xapi-consts
<ocaml/xapi/suite.{native,byte}>: use_xapi-database
<ocaml/xapi/suite.{native,byte}>: use_xapi-datamodel
<ocaml/xapi/suite.{native,byte}>: use_xapi-types
<ocaml/xapi/suite.{native,byte}>: use_xapi-version
<ocaml/xapi/*.ml{,i,y}>: package(ezxenstore)
<ocaml/xapi/*.ml{,i,y}>: package(gzip)
<ocaml/xapi/*.ml{,i,y}>: package(http-svr)
<ocaml/xapi/*.ml{,i,y}>: package(oPasswd)
<ocaml/xapi/*.ml{,i,y}>: package(oUnit)
<ocaml/xapi/*.ml{,i,y}>: package(oclock)
<ocaml/xapi/*.ml{,i,y}>: package(pci)
<ocaml/xapi/*.ml{,i,y}>: package(pciutil)
<ocaml/xapi/*.ml{,i,y}>: package(ppx_deriving_rpc)
<ocaml/xapi/*.ml{,i,y}>: package(ppx_sexp_conv)
<ocaml/xapi/*.ml{,i,y}>: package(rpclib)
<ocaml/xapi/*.ml{,i,y}>: package(rrdd-plugin)
<ocaml/xapi/*.ml{,i,y}>: package(sexpr)
<ocaml/xapi/*.ml{,i,y}>: package(sha)
<ocaml/xapi/*.ml{,i,y}>: package(stdext)
<ocaml/xapi/*.ml{,i,y}>: package(tapctl)
<ocaml/xapi/*.ml{,i,y}>: package(tar)
<ocaml/xapi/*.ml{,i,y}>: package(tar.unix)
<ocaml/xapi/*.ml{,i,y}>: package(threads)
<ocaml/xapi/*.ml{,i,y}>: package(uuid)
<ocaml/xapi/*.ml{,i,y}>: package(xapi-test-utils)
<ocaml/xapi/*.ml{,i,y}>: package(xcp)
<ocaml/xapi/*.ml{,i,y}>: package(xcp-inventory)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.gpumon)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.memory)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.network)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.rrd)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.storage)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.v6)
<ocaml/xapi/*.ml{,i,y}>: package(xcp.xen)
<ocaml/xapi/*.ml{,i,y}>: package(xenctrl)
<ocaml/xapi/*.ml{,i,y}>: package(xenopsd)
<ocaml/xapi/*.ml{,i,y}>: package(xml-light2)
<ocaml/xapi/*.ml{,i,y}>: use_pam
<ocaml/xapi/*.ml{,i,y}>: use_rfb
<ocaml/xapi/*.ml{,i,y}>: use_xapi-cli-protocol
<ocaml/xapi/*.ml{,i,y}>: use_xapi-client
<ocaml/xapi/*.ml{,i,y}>: use_xapi-consts
<ocaml/xapi/*.ml{,i,y}>: use_xapi-database
<ocaml/xapi/*.ml{,i,y}>: use_xapi-datamodel
<ocaml/xapi/*.ml{,i,y}>: use_xapi-types
<ocaml/xapi/*.ml{,i,y}>: use_xapi-version
# OASIS_STOP
<ocaml/xapi/cli_operations.ml>: warn(-52)
